def the_bee(n):
    cells = [0]*(2*n+1)
    cells[n] = 1
    
    for i in range(1, 4*n-2):
        for j in range(i%2+1, 2*n, 2):
            cells[j-1] += cells[j]
            cells[j+1] += cells[j]
    
    return cells[n]
from math import prod

def number_of_coins(info):
    prod_ = prod(m_i for a_i, m_i in info)
    return sum(a_i * pow(p := prod_ // m_i, -1, m_i) * p for a_i, m_i in info) % prod_
def draw_wigwam(n):
    
    def colons(x):  return f':-:{ ":"*x }'[:x]
    def zigs(x):    return  ':_' * (x+1>>1)
    def fold(left): return f'/{ left }:{ left[::-1] }\\'

    def on_side(i):    return n>4 and i>2
    def above_door(i): return i<n

    def dots(i,j,di,dj,go):
        while go(i): bd[i][j]='°' ; i+=di ; j+=dj
    
    S,body = 2*n+1, (fold( colons(i) if i&1 else zigs(i) ) for i in range(n))
    bd     = [ [*row.center(S)] for row in ("\\ /", "¥",*body) ]

    bd[ n ][n-1:n+2] =  '/‾\\'
    bd[n+1][n-2:n+3] = '/   \\'

    dots(n,3,-4,4, on_side)
    dots(2,n,3,0, above_door)
    dots(n,S-4,-4,-4, on_side)

    return '\n'.join(map(''.join, bd))
